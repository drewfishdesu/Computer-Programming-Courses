package com.mycompany.comprog2_exercise2;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.*;
/**
 *
 * @author alasacriz
 */
public class ProductsForm extends javax.swing.JFrame {

    
    public ProductsForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane9 = new javax.swing.JScrollPane();
        productSupplier = new javax.swing.JTextPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        productDesc = new javax.swing.JTextPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        productQuantity1 = new javax.swing.JTextPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        dateReceivedField = new javax.swing.JTextPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        productTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        productQuantity2 = new javax.swing.JTextPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        productID = new javax.swing.JTextPane();
        jLabel11 = new javax.swing.JLabel();
        btnStockIn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productType = new javax.swing.JTextPane();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        thresholdQuantity = new javax.swing.JTextPane();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        unitCostField = new javax.swing.JTextPane();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        productTable2 = new javax.swing.JTable();
        save_yeah = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        laborCostField = new javax.swing.JTextPane();
        jScrollPane13 = new javax.swing.JScrollPane();
        overheadCostField = new javax.swing.JTextPane();
        jScrollPane14 = new javax.swing.JScrollPane();
        desiredProfitField = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        openSupplier = new javax.swing.JMenuItem();
        openCustomer = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane9.setViewportView(productSupplier);

        jScrollPane10.setViewportView(productDesc);

        jScrollPane5.setViewportView(productQuantity1);

        dateReceivedField.setEditable(false);
        dateReceivedField.setFocusable(false);
        jScrollPane6.setViewportView(dateReceivedField);

        productTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Product Type", "Description", "Total Quantity", "Total Cost", "Total Price", "Total Orders"
            }
        ));
        productTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTable1MouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(productTable1);

        jLabel9.setText("Threshold Quantity");

        jScrollPane11.setViewportView(productQuantity2);

        productID.setEditable(false);
        productID.setFocusable(false);
        jScrollPane1.setViewportView(productID);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("+");

        btnStockIn.setText("Stock In");
        btnStockIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStockInActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(productType);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");

        jScrollPane3.setViewportView(thresholdQuantity);

        jLabel2.setText("Product ID");

        jLabel3.setText("Product Type");

        jLabel4.setText("Product Description");

        jLabel5.setText("Supplier");

        jLabel6.setText("Unit Cost");

        jLabel7.setText("Date Recevied");

        jLabel8.setText("Quantity");

        jScrollPane8.setViewportView(unitCostField);

        jLabel12.setFont(new java.awt.Font("Helvetica", 1, 36)); // NOI18N
        jLabel12.setText("Product Form");

        productTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Prod ID", "Batch #", "Supplier", "Quantity", "Unit Cost", "Unit Price", "Date Received", "Orders"
            }
        ));
        productTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTable2MouseClicked(evt);
            }
        });
        jScrollPane12.setViewportView(productTable2);

        save_yeah.setText("Save");
        save_yeah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_yeahActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(laborCostField);

        jScrollPane13.setViewportView(overheadCostField);

        jScrollPane14.setViewportView(desiredProfitField);

        jLabel1.setText("Labor Cost");

        jLabel10.setText("Desired Profit");

        jLabel13.setText("Overhead Cost");

        jMenu1.setText("File");

        openSupplier.setText("Supplier");
        openSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openSupplierActionPerformed(evt);
            }
        });
        jMenu1.add(openSupplier);

        openCustomer.setText("Customers");
        openCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCustomerActionPerformed(evt);
            }
        });
        jMenu1.add(openCustomer);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(save_yeah, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(113, 113, 113)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                    .addComponent(jScrollPane14)
                                    .addComponent(jScrollPane4)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel4))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane10)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane8)
                                    .addComponent(jScrollPane2)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane3)
                                    .addComponent(jScrollPane1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel11)
                                        .addGap(12, 12, 12)
                                        .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)))))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnStockIn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEdit)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnDelete))
                            .addComponent(jLabel6)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 915, Short.MAX_VALUE)
                    .addComponent(jScrollPane7))
                .addGap(58, 58, 58))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel8)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabel7))
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnStockIn)
                            .addComponent(btnEdit)
                            .addComponent(btnDelete))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(save_yeah)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    String[][] prod = new String[100] [9];
    int pcount = 0;
    
    
    private void btnStockInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStockInActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel) productTable1.getModel();
        DefaultTableModel tblModel2 = (DefaultTableModel) productTable2.getModel();
        
        if(pcount == 0){
            tblModel.setRowCount(0);
            tblModel2.setRowCount(0);
        }
        String newDesc = productDesc.getText();
        String newType = productType.getText();
        boolean exists = false;
        
        for(int i = 0; i < pcount; i ++){
        if(prod[i][0] != null && prod[i][1] != null && prod[i][2].equals(newDesc) && prod[i][1].equals(newType)){
            exists = true; 
            break;
        }
    }
        
    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
    String currentDate = LocalDate.now().format(formatter);
    prod[pcount][0] = Integer.toString(pcount+1);
    prod[pcount][1] = newType;
    prod[pcount][2] = productDesc.getText();
    prod[pcount][3] = productSupplier.getText();
    prod[pcount][4] = unitCostField.getText();
    prod[pcount][5] = thresholdQuantity.getText();
    prod[pcount][6] = productQuantity1.getText();
    prod[pcount][7] = currentDate;
    
    
    
    int unitPrice= 0;
    String laborCost = laborCostField.getText();
    String overheadCost = overheadCostField.getText();
    String desiredProfit = desiredProfitField.getText();
    unitPrice = Integer.parseInt(laborCost) + Integer.parseInt(overheadCost) + Integer.parseInt(desiredProfit) + Integer.parseInt(unitCostField.getText());
    prod[pcount][8] = Integer.toString(unitPrice);

    
    if(!exists){
        String[] item = {prod[pcount][0],prod[pcount][1],prod[pcount][2],prod[pcount][6], prod[pcount][4]};
        
        
        tblModel.addRow(item);
        tblModel2.setRowCount(0);
    }
    
    int batchNumber = tblModel2.getRowCount() + 1;
    String[] item = 
    {
        prod[pcount][0],String.valueOf(batchNumber),prod[pcount][3],prod[pcount][6], prod[pcount][4], prod[pcount][8],prod[pcount][7], 
    };
    tblModel2.addRow(item);
    pcount++;
    
    
    // Total Quantity
    int totalQuantity = 0;
    int totalCost = 0;
    int totalPrice = 0;
    for(int i = 0; i < pcount; i ++)
    {
        if(prod[i][0] != null && prod[i][1] != null && prod[i][2].equals(newDesc) && prod[i][1].equals(newType))
        {
            totalQuantity = totalQuantity + Integer.parseInt(prod[i][6]);
            totalCost = totalCost + Integer.parseInt(prod[i][4]);
            totalPrice = totalPrice + Integer.parseInt(prod[i][8]);
        }
    }
    
    for (int i = 0; i < tblModel.getRowCount(); i++) { 
        if (tblModel.getValueAt(i, 1).equals(newType) && tblModel.getValueAt(i, 2).equals(newDesc)) { 
            tblModel.setValueAt(Integer.toString(totalQuantity), i, 3); 
            tblModel.setValueAt(Integer.toString(totalCost), i, 4);
            tblModel.setValueAt(Integer.toString(totalPrice), i, 5);
        } 
    }
    
    }//GEN-LAST:event_btnStockInActionPerformed

    private void productTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTable1MouseClicked
        DefaultTableModel tblModel2 = (DefaultTableModel) productTable2.getModel();
    tblModel2.setRowCount(0); // Clear Table 2 before displaying new data
    
    int selectedRow = productTable1.getSelectedRow(); // Get the selected row index
    
    if (selectedRow != -1) { // Ensure a row is selected
        String selectedType = productTable1.getValueAt(selectedRow, 1).toString();
        String selectedDesc = productTable1.getValueAt(selectedRow, 2).toString();
        
        productType.setText(selectedType); // Set Type
        productDesc.setText(selectedDesc); // Set Description
        
        // Search through prod array for all products that match Type & Description
        for (int i = 0; i < pcount; i++) {
            if (prod[i][0] != null && prod[i][1] != null && prod[i][2] != null && 
                prod[i][1].equals(selectedType) && prod[i][2].equals(selectedDesc)) {
                
                // Add the matching product batch to Table 2
                String[] item = {
                    prod[i][0], 
                    String.valueOf(tblModel2.getRowCount() + 1), // Batch Number
                    prod[i][3], // Supplier
                    prod[i][6], // Quantity
                    prod[i][4], // Unit Cost
                    prod[i][8], //unit price
                    prod[i][7]  // Date Received
                };
                tblModel2.addRow(item);
            }
        }
    }
    }//GEN-LAST:event_productTable1MouseClicked

    private void openSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openSupplierActionPerformed
        // TODO add your handling code here:
        SupplierForm suppliersForm = new SupplierForm();
            suppliersForm.show();
    }//GEN-LAST:event_openSupplierActionPerformed

    private void openCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCustomerActionPerformed
        // TODO add your handling code here:
        ProductsForm productsForm = new ProductsForm();
            productsForm.show();
    }//GEN-LAST:event_openCustomerActionPerformed

    private void productTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTable2MouseClicked
        DefaultTableModel tblmodel2 = (DefaultTableModel) productTable2.getModel();
        
       String id = tblmodel2.getValueAt(productTable2.getSelectedRow(), 0).toString();
       String supplierProd = tblmodel2.getValueAt(productTable2.getSelectedRow(), 2).toString();
       String quantityProd = tblmodel2.getValueAt(productTable2.getSelectedRow(), 3).toString();
       String unitCost = tblmodel2.getValueAt(productTable2.getSelectedRow(), 4).toString();
       String dateReceived = tblmodel2.getValueAt(productTable2.getSelectedRow(), 6).toString();
       
       productID.setText(id);
       productSupplier.setText(supplierProd);
       productQuantity1.setText(quantityProd);
       unitCostField.setText(unitCost);
       dateReceivedField.setText(dateReceived);

    }//GEN-LAST:event_productTable2MouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        DefaultTableModel tableModel = (DefaultTableModel) productTable2.getModel();
        DefaultTableModel tableModel1 = (DefaultTableModel) productTable1.getModel();

        String newDesc = productDesc.getText();
        String newType = productType.getText();
        
        
        int prodId = Integer.parseInt(productID.getText());
        prodId -= 1;
        String supplierProd= productSupplier.getText();
        String quantityProd = productQuantity1.getText();
        String currentUnitcost = unitCostField.getText();
        
        int tableUnitprice = Integer.valueOf(tableModel.getValueAt(productTable2.getSelectedRow(), 5).toString());
        int tableUnitCost = Integer.valueOf(tableModel.getValueAt(productTable2.getSelectedRow(), 4).toString());
       
        int newUnitPrice = (tableUnitprice - tableUnitCost) + Integer.parseInt(currentUnitcost);
        
        prod[prodId][3] = supplierProd;
        prod[prodId][6] = quantityProd;
        prod[prodId][4] = currentUnitcost;
        prod[prodId][8] = Integer.toString(newUnitPrice);
  
        tableModel.setValueAt(prod[prodId][3], productTable2.getSelectedRow(), 2);
        tableModel.setValueAt(prod[prodId][6], productTable2.getSelectedRow(), 3);
        tableModel.setValueAt(prod[prodId][4], productTable2.getSelectedRow(), 4);
        tableModel.setValueAt(prod[prodId][8], productTable2.getSelectedRow(), 5);

        //
    int totalQuantity = 0;
    int totalCost = 0;
    int totalPrice = 0;
    for(int i = 0; i < pcount; i ++)
    {
        if(prod[i][0] != null && prod[i][1] != null && prod[i][2].equals(newDesc) && prod[i][1].equals(newType))
        {
            totalQuantity = totalQuantity + Integer.parseInt(prod[i][6]);
            totalCost = totalCost + Integer.parseInt(prod[i][4]);
            totalPrice = totalPrice + Integer.parseInt(prod[i][8]);
        }
    }
    
    for (int i = 0; i < tableModel1.getRowCount(); i++) { 
        if (tableModel1.getValueAt(i, 1).equals(newType) && tableModel1.getValueAt(i, 2).equals(newDesc)) { 
            tableModel1.setValueAt(Integer.toString(totalQuantity), i, 3); 
            tableModel1.setValueAt(Integer.toString(totalCost), i, 4);
            tableModel1.setValueAt(Integer.toString(totalPrice), i, 5);
        } 
    }
        //
        
        
        
    
   
    }//GEN-LAST:event_btnEditActionPerformed

    private void save_yeahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_yeahActionPerformed
      DefaultTableModel tableModel = (DefaultTableModel) productTable2.getModel();
    DefaultTableModel tableModel1 = (DefaultTableModel) productTable1.getModel();

    int labor = Integer.parseInt(laborCostField.getText());
    int overhead = Integer.parseInt(overheadCostField.getText());
    int desiredProfit = Integer.parseInt(desiredProfitField.getText());

    int totalUnitPrice = 0; // Accumulator for total price

    if (productTable1.getSelectedRowCount() == 1) {
        for (int i = 0; i < productTable2.getRowCount(); i++) {
            // Get unit cost
            String tableUnitCost = tableModel.getValueAt(i, 4).toString();
            int unitCost = Integer.parseInt(tableUnitCost);

            // Get table ID
            String tblID = tableModel.getValueAt(i, 0).toString();
            int tblId = Integer.parseInt(tblID) - 1;

            // Compute unit price
            int saveUnitPrice = unitCost + labor + overhead + desiredProfit;
            prod[tblId][8] = Integer.toString(saveUnitPrice);

            // Set updated unit price in table2
            tableModel.setValueAt(prod[tblId][8], i, 5);

            // Add to total price
            totalUnitPrice += saveUnitPrice;
        }

        // Update total price in table1 AFTER the loop
        tableModel1.setValueAt(Integer.toString(totalUnitPrice), productTable1.getSelectedRow(), 5);
    }
    }//GEN-LAST:event_save_yeahActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnStockIn;
    private javax.swing.JTextPane dateReceivedField;
    private javax.swing.JTextPane desiredProfitField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextPane laborCostField;
    private javax.swing.JMenuItem openCustomer;
    private javax.swing.JMenuItem openSupplier;
    private javax.swing.JTextPane overheadCostField;
    private javax.swing.JTextPane productDesc;
    private javax.swing.JTextPane productID;
    private javax.swing.JTextPane productQuantity1;
    private javax.swing.JTextPane productQuantity2;
    private javax.swing.JTextPane productSupplier;
    private javax.swing.JTable productTable1;
    private javax.swing.JTable productTable2;
    private javax.swing.JTextPane productType;
    private javax.swing.JButton save_yeah;
    private javax.swing.JTextPane thresholdQuantity;
    private javax.swing.JTextPane unitCostField;
    // End of variables declaration//GEN-END:variables
}
