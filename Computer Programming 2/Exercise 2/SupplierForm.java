/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.comprog2_exercise2;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alasacriz
 */
public class SupplierForm extends javax.swing.JFrame {

    static void open() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * Creates new form SupplierForm
     */
    public SupplierForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        supplierID = new javax.swing.JTextField();
        supplierName = new javax.swing.JTextField();
        supplierContactPerson = new javax.swing.JTextField();
        supplierNumber = new javax.swing.JTextField();
        supplierEmail = new javax.swing.JTextField();
        supplierPaymentTerms = new javax.swing.JTextField();
        supplierProductsSupplied = new javax.swing.JTextField();
        supplierRating = new javax.swing.JTextField();
        supplierDateAdded = new javax.swing.JTextField();
        supplierLastTransaction = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        supplierTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuOpen = new javax.swing.JMenu();
        openCustomers = new javax.swing.JMenuItem();
        openProducts = new javax.swing.JMenuItem();
        btnExit = new javax.swing.JMenuItem();
        menuHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 18)); // NOI18N
        jLabel1.setText("Supplier Form");

        jLabel2.setText("Supplier ID");

        jLabel3.setText("Supplier Name");

        jLabel4.setText("Contact Person");

        jLabel5.setText("Phone Number");

        jLabel6.setText("Email Address");

        jLabel7.setText("Payment Terms");

        jLabel8.setText("Products Supplied");

        jLabel9.setText("Rating/Priority");

        jLabel10.setText("Date Added");

        jLabel11.setText("Last Transaction Date");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        supplierID.setEditable(false);

        supplierDateAdded.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierDateAddedActionPerformed(evt);
            }
        });

        supplierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Supplier Name", "Contact Person", "Phone Number", "Email Address", "Payment Terms", "Products Supplied", "Rating/Priority", "Date Added", "Last Transaction Date"
            }
        ));
        supplierTable.getTableHeader().setReorderingAllowed(false);
        supplierTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                supplierTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(supplierTable);

        menuOpen.setText("Open");

        openCustomers.setText("Customers");
        openCustomers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCustomersActionPerformed(evt);
            }
        });
        menuOpen.add(openCustomers);

        openProducts.setText("Products");
        openProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openProductsActionPerformed(evt);
            }
        });
        menuOpen.add(openProducts);

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        menuOpen.add(btnExit);

        jMenuBar1.add(menuOpen);

        menuHelp.setText("Help");
        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(937, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnEdit))
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(supplierName, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(supplierContactPerson)
                            .addComponent(supplierNumber)
                            .addComponent(supplierEmail)
                            .addComponent(supplierPaymentTerms)
                            .addComponent(supplierProductsSupplied)
                            .addComponent(supplierRating)
                            .addComponent(supplierDateAdded)
                            .addComponent(supplierLastTransaction)
                            .addComponent(btnDelete)
                            .addComponent(supplierID, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(supplierID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(supplierName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(supplierContactPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(supplierNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(supplierEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(supplierPaymentTerms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(supplierProductsSupplied, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(supplierRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(supplierDateAdded, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(supplierLastTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnEdit)
                    .addComponent(btnSave))
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Initialize the array
    String[][] supp = new String [100][10];
    
    // Function definition
    // Refreshes the table
    
    public void refreshtable()
    {
        DefaultTableModel supp_table = (DefaultTableModel) supplierTable.getModel();
        supp_table.setRowCount(0);
        for(int i = 0; i < snum; i++)
        {
            // Prevents the array from printing null values
            if(supp[i][0] != null)
            {
                supp_table.addRow(supp[i]);
            }
        }
        
    }
    
    private int[] collectIDs()
    {
        DefaultTableModel model = (DefaultTableModel) supplierTable.getModel();
        int rowCount = model.getRowCount(); // Gets the number of rows in the table
        int[] ids = new int[rowCount]; // Creates an array to store the IDs
        
        for(int i = 0; i < rowCount; i++)
        {
            Object idValue = model.getValueAt(i, 0); // Gets the values from the first column (ID column)
            if(idValue != null)
            {
                ids[i] = Integer.parseInt(idValue.toString()); // Converts the value to an integer
            }
        }
        return ids;
    }
    
    int snum = 0;
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        
        // Asks the user for confirmation
        int response = JOptionPane.showConfirmDialog(
            this,
            "Do you want to save this entry?",
            "Confirm Save",
            JOptionPane.YES_NO_OPTION
        );
        
        // Checks the user's response
        if(response == JOptionPane.YES_OPTION)
        {
            DefaultTableModel supp_table = (DefaultTableModel) supplierTable.getModel();

            // Clears the table
            if(snum == 0)
            {
                supp_table.setRowCount(0);
            }

            // Sorts the existing IDs into an array
            int[] existingIDs = collectIDs();

            // Bubble sorts the array
            for(int i = 0; i < existingIDs.length - 1; i++)
            {
                for(int j = 0; j < existingIDs.length - 1 - i; j++)
                {
                    if(existingIDs[j] > existingIDs[j + 1])
                    {
                        int temp = existingIDs[j];
                        existingIDs[j] = existingIDs[j + 1];
                        existingIDs[j + 1] = temp;
                    }
                }
            }

            // Finds the smallest missing ID
            int newID = 1; // Starts the ID from 1
            for(int i = 0; i < existingIDs.length; i++)
            {
                int id = existingIDs[i];
                if(id == newID)
                {
                    newID++; // Increment if no gap is found
                }
                else if(id > newID)
                {
                    break;
                }
            }

            // Sets the new ID in the text field of the array
            supplierID.setText(String.valueOf(newID));
            supp[snum][0] = String.valueOf(newID);

            // Gets data from input
            supp[snum][1] = supplierName.getText();
            supp[snum][2] = supplierContactPerson.getText();
            supp[snum][3] = supplierNumber.getText();
            supp[snum][4] = supplierEmail.getText();
            supp[snum][5] = supplierPaymentTerms.getText();
            supp[snum][6] = supplierProductsSupplied.getText();
            supp[snum][7] = supplierRating.getText();
            supp[snum][8] = supplierDateAdded.getText();
            supp[snum][9] = supplierLastTransaction.getText();

            // Adds rows to the array
            supp_table.addRow(supp[snum]);

            // Increments the counter
            snum++;
        }
        else
        {
            JOptionPane.showMessageDialog(
                this,
                "Save operation canceled.",
                "Save Canceled",
                JOptionPane.INFORMATION_MESSAGE
            );
        }
        
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // Asks the user for confirmation
        int response = JOptionPane.showConfirmDialog(
            this,
            "Do you want to modify this entry?",
            "Confirm Edit",
            JOptionPane.YES_NO_OPTION
        );
        
        // Checks the user's response
        if(response == JOptionPane.YES_OPTION)
        {
            // Searches the ID
            for(int i = 0; i < snum; i++)
            {
                if(supplierID.getText().equals(supp[i][0]))
                {
                    supp[i][1] = supplierName.getText();
                    supp[i][2] = supplierContactPerson.getText();
                    supp[i][3] = supplierNumber.getText();
                    supp[i][4] = supplierEmail.getText();
                    supp[i][5] = supplierPaymentTerms.getText();
                    supp[i][6] = supplierProductsSupplied.getText();
                    supp[i][7] = supplierRating.getText();
                    supp[i][8] = supplierDateAdded.getText();
                    supp[i][9] = supplierLastTransaction.getText();
                }
            }

            // Calls the refreshtable() function
            refreshtable();
        }
        else
        {
            JOptionPane.showMessageDialog(
                this,
                "No changes were made.",
                "Edit Canceled",
                JOptionPane.INFORMATION_MESSAGE
            );
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void supplierDateAddedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierDateAddedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierDateAddedActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       // Asks the user for confirmation
        int response = JOptionPane.showConfirmDialog(
            this,
            "Do you want to delete this entry?",
            "Confirm Save",
            JOptionPane.YES_NO_OPTION
        );
        
        // Checks the user's response
        if(response == JOptionPane.YES_OPTION)
        {
            // Pop-Up Confirmation
            JOptionPane.showMessageDialog(
                this,
                "Deleted one item successfully.",
                "Entry Deleted",
                JOptionPane.INFORMATION_MESSAGE
            );
            
            // Performs a search for the row that's going to be deleted
            for(int x = 0; x < snum; x++)
            {
                int y = x;
                if(supp[x][0].equals(supplierID.getText()))
                {
                    while(y < snum)
                    {
                        supp[y][0] = supp[y + 1][0];
                        supp[y][1] = supp[y + 1][1];
                        supp[y][2] = supp[y + 1][2];
                        supp[y][3] = supp[y + 1][3];
                        supp[y][4] = supp[y + 1][4];
                        supp[y][5] = supp[y + 1][5];
                        supp[y][6] = supp[y + 1][6];
                        supp[y][7] = supp[y + 1][7];
                        supp[y][8] = supp[y + 1][8];
                        supp[y][9] = supp[y + 1][9];
                        y++;
                    }
                    break;
                }
            }
            snum--;
            refreshtable();
        }
        else
        {
            JOptionPane.showMessageDialog(
                this,
                "Nothing was deleted.",
                "Delete Canceled",
                JOptionPane.INFORMATION_MESSAGE
            );
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void supplierTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_supplierTableMouseClicked
       int[] selectedRow = supplierTable.getSelectedRows();
       
       supplierID.setText(supplierTable.getValueAt(selectedRow[0], 0).toString());
       supplierName.setText(supplierTable.getValueAt(selectedRow[0], 1).toString());
       supplierContactPerson.setText(supplierTable.getValueAt(selectedRow[0], 2).toString());
       supplierNumber.setText(supplierTable.getValueAt(selectedRow[0], 3).toString());
       supplierEmail.setText(supplierTable.getValueAt(selectedRow[0], 4).toString());
       supplierPaymentTerms.setText(supplierTable.getValueAt(selectedRow[0], 5).toString());
       supplierProductsSupplied.setText(supplierTable.getValueAt(selectedRow[0], 6).toString());
       supplierRating.setText(supplierTable.getValueAt(selectedRow[0], 7).toString());
       supplierDateAdded.setText(supplierTable.getValueAt(selectedRow[0], 8).toString());
       supplierLastTransaction.setText(supplierTable.getValueAt(selectedRow[0], 9).toString());
    }//GEN-LAST:event_supplierTableMouseClicked

    private void openCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCustomersActionPerformed
        CustomerRegForm customerForm = new CustomerRegForm();
            customerForm.show();
    }//GEN-LAST:event_openCustomersActionPerformed

    private void openProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openProductsActionPerformed
        ProductsForm productsForm = new ProductsForm();
            productsForm.show();
    }//GEN-LAST:event_openProductsActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupplierForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JMenuItem btnExit;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenu menuOpen;
    private javax.swing.JMenuItem openCustomers;
    private javax.swing.JMenuItem openProducts;
    private javax.swing.JTextField supplierContactPerson;
    private javax.swing.JTextField supplierDateAdded;
    private javax.swing.JTextField supplierEmail;
    private javax.swing.JTextField supplierID;
    private javax.swing.JTextField supplierLastTransaction;
    private javax.swing.JTextField supplierName;
    private javax.swing.JTextField supplierNumber;
    private javax.swing.JTextField supplierPaymentTerms;
    private javax.swing.JTextField supplierProductsSupplied;
    private javax.swing.JTextField supplierRating;
    private javax.swing.JTable supplierTable;
    // End of variables declaration//GEN-END:variables
}
